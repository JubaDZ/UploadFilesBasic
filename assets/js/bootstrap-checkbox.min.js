!function(a){var b=function(b,c,d){d&&(d.stopPropagation(),d.preventDefault()),this.$element=a(b),this.$newElement=null,this.button=null,this.label=null,this.labelPrepend=null,this.options=a.extend({},a.fn.checkbox.defaults,this.$element.data(),"object"==typeof c&&c),this.init()};b.prototype={constructor:b,init:function(a){this.$element.hide(),this.$element.attr("autocomplete","off"),this._createButtons()},_createButtons:function(){var a=void 0!==this.$element.attr("class")?this.$element.attr("class").split(/\s+/):"",b=this.getTemplate();this.$element.after(b),this.$newElement=this.$element.next(".bootstrap-checkbox"),this.button=this.$newElement.find("button"),this.label=this.$newElement.find("span.label-checkbox"),this.labelPrepend=this.$newElement.find("span.label-prepend-checkbox");for(var c=0;c<a.length;c++)"checkbox"!=a[c]&&this.$newElement.addClass(a[c]);this.button.addClass(this.options.buttonStyle),void 0!=this.$element.data("default-state")&&(this.options.defaultState=this.$element.data("default-state")),void 0!=this.$element.data("default-enabled")&&(this.options.defaultEnabled=this.$element.data("default-enabled")),void 0!=this.$element.data("display-as-button")&&(this.options.displayAsButton=this.$element.data("display-as-button")),this.options.indeterminate&&this.$element.prop("indeterminate",!0),this.checkEnabled(),this.checkChecked(),this.checkTabIndex(),this.clickListener()},getTemplate:function(){var a=this.options.displayAsButton?" displayAsButton":"",b=this.$element.data("label")?'<span class="label-checkbox">'+this.$element.data("label")+"</span>":"",c=this.$element.data("label-prepend")?'<span class="label-prepend-checkbox">'+this.$element.data("label-prepend")+"</span>":"",d='<span class="button-checkbox bootstrap-checkbox"><button type="button" class="btn clearfix'+a+'">'+(this.$element.data("label-prepend")&&this.options.displayAsButton?c:"")+'<span class="icon '+this.options.checkedClass+'" style="display:none;"></span><span class="icon '+this.options.uncheckedClass+'"></span><span class="icon '+this.options.indeterminateClass+'" style="display:none;"></span>'+(this.$element.data("label")&&this.options.displayAsButton?b:"")+"</button></span>";return this.options.displayAsButton||!this.$element.data("label")&&!this.$element.data("label-prepend")||(d='<label class="'+this.options.labelClass+'">'+c+d+b+"</label>"),d},checkEnabled:function(){this.button.attr("disabled",this.$element.is(":disabled")),this.$newElement.toggleClass("disabled",this.$element.is(":disabled"))},checkTabIndex:function(){if(this.$element.is("[tabindex]")){var a=this.$element.attr("tabindex");this.button.attr("tabindex",a)}},checkChecked:function(){var b=/\s/g,c=".";1==this.$element.prop("indeterminate")?(this.button.find("span."+this.options.checkedClass.replace(b,c)).hide(),this.button.find("span."+this.options.uncheckedClass.replace(b,c)).hide(),this.button.find("span."+this.options.indeterminateClass.replace(b,c)).show()):(this.$element.is(":checked")?(this.button.find("span."+this.options.checkedClass.replace(b,c)).show(),this.button.find("span."+this.options.uncheckedClass.replace(b,c)).hide()):(this.button.find("span."+this.options.checkedClass.replace(b,c)).hide(),this.button.find("span."+this.options.uncheckedClass.replace(b,c)).show()),this.button.find("span."+this.options.indeterminateClass.replace(b,c)).hide()),this.$element.is(":checked")?this.options.buttonStyleChecked&&(this.button.removeClass(this.options.buttonStyle),this.button.addClass(this.options.buttonStyleChecked)):this.options.buttonStyleChecked&&(this.button.removeClass(this.options.buttonStyleChecked),this.button.addClass(this.options.buttonStyle)),this.$element.is(":checked")?this.options.labelClassChecked&&a(this.$element).next("label").addClass(this.options.labelClassChecked):this.options.labelClassChecked&&a(this.$element).next("label").removeClass(this.options.labelClassChecked)},clickListener:function(){var a=this;this.button.on("click",function(b){b.preventDefault(),a.$element.prop("indeterminate",!1),a.$element[0].click(),a.checkChecked()}),this.$element.on("change",function(b){a.checkChecked()}),this.$element.parents("form").on("reset",function(b){null==a.options.defaultState?a.$element.prop("indeterminate",!0):a.$element.prop("checked",a.options.defaultState),a.$element.prop("disabled",!a.options.defaultEnabled),a.checkEnabled(),a.checkChecked(),b.preventDefault()})},setOptions:function(a,b){void 0!=a.checked&&this.setChecked(a.checked),void 0!=a.enabled&&this.setEnabled(a.enabled),void 0!=a.indeterminate&&this.setIndeterminate(a.indeterminate)},setChecked:function(a){this.$element.prop("checked",a),this.$element.prop("indeterminate",!1),this.checkChecked()},setIndeterminate:function(a){this.$element.prop("indeterminate",a),this.checkChecked()},click:function(a){this.$element.prop("indeterminate",!1),this.$element[0].click(),this.checkChecked()},change:function(a){this.$element.change()},setEnabled:function(a){this.$element.attr("disabled",!a),this.checkEnabled()},toggleEnabled:function(a){this.$element.attr("disabled",!this.$element.is(":disabled")),this.checkEnabled()},refresh:function(a){this.checkEnabled(),this.checkChecked()},update:function(b){this.$element.next().find(".bootstrap-checkbox")&&(this.options=a.extend({},this.options,b),this.$element.next().remove(),this._createButtons())}},a.fn.checkbox=function(c,d){return this.each(function(){var e=a(this),f=e.data("checkbox"),g="object"==typeof c&&c;f?"string"==typeof c?f[c](d):"undefined"!=typeof c&&f.setOptions(c,d):(e.data("checkbox",f=new b(this,g,d)),void 0!=f.options.constructorCallback&&f.options.constructorCallback(f.$element,f.button,f.label,f.labelPrepend))})},a.fn.checkbox.defaults={displayAsButton:!1,indeterminate:!1,buttonStyle:"btn-link",buttonStyleChecked:null,checkedClass:"cb-icon-check",uncheckedClass:"cb-icon-check-empty",indeterminateClass:"cb-icon-check-indeterminate",defaultState:!1,defaultEnabled:!0,constructorCallback:null,labelClass:"checkbox bootstrap-checkbox",labelClassChecked:"active"}}(window.jQuery);